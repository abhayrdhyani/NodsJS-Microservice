user  nginx; # Uncomment if running as a non-root user
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80; # Nginx will listen on port 80

        # Set the root directory for serving files
        root /usr/share/nginx/html;

        # Specify the default file to serve when a directory is requested
        index index.html index.htm;

        location / {
            try_files $uri $uri/ /index.html; # Try to serve file, then directory, then index.html
        }

        # If you had other static assets in subdirectories (e.g., /images, /css)
        # Nginx would serve them automatically based on the 'root' directive.
        # Example for audio file directly:
        location /tropical_1.mp3 {
            add_header Content-Type audio/mpeg;
        }
    }
}




#Explanation of nginx.conf:

#listen 80;: Nginx will listen for incoming HTTP requests on port 80.
#root /usr/share/nginx/html;: This is the directory inside the Nginx container where your index.html and other static assets will be placed.
#index index.html index.htm;: When a request comes in for a directory (like /), Nginx will look for index.html or index.htm to serve.
#location / { ... }: This block handles all incoming requests. try_files $uri $uri/ /index.html; is a common pattern for single-page applications, ensuring that index.html is served for any path that doesn't directly match a file or directory.
#location /tropical_1.mp3 { ... }: This explicitly sets the correct MIME type for your MP3 file, which can help some browsers play it correctly.